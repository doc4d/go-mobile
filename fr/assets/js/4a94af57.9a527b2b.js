(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{115:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return d})),a.d(t,"default",(function(){return s}));var n=a(3),i=a(7),r=(a(0),a(204)),l={id:"detail-form-template-svg",title:"Template.svg",sidebar_label:"Template.svg"},o={unversionedId:"tutorials/creating-detail-forms/detail-form-template-svg",id:"tutorials/creating-detail-forms/detail-form-template-svg",isDocsHomePage:!1,title:"Template.svg",description:"The template.svg file is a basic template representation. In this svg file, you'll need to define areas in order to be able to add fields to your detail form template from the project editor.",source:"@site/docs/tutorials/creating-detail-forms/detail-form-template-svg.md",slug:"/tutorials/creating-detail-forms/detail-form-template-svg",permalink:"/go-mobile/fr/docs/tutorials/creating-detail-forms/detail-form-template-svg",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/tutorials/creating-detail-forms/detail-form-template-svg.md",version:"current",sidebar_label:"Template.svg",sidebar:"tutorials",previous:{title:"Manifest.json",permalink:"/go-mobile/fr/docs/tutorials/creating-detail-forms/detail-form-template-manifest"},next:{title:"Detail Form Template Storyboard",permalink:"/go-mobile/fr/docs/tutorials/creating-detail-forms/detail-form-template-storyboard"}},d=[{value:"Title",id:"title",children:[]},{value:"Areas position, height and width and type",id:"areas-position-height-and-width-and-type",children:[{value:"Field properties",id:"field-properties",children:[]},{value:"Image field area",id:"image-field-area",children:[]}]}],p={toc:d};function s(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The template.svg file is a basic template representation. In this svg file, you'll need to define areas in order to be able to add fields to your detail form template from the project editor."),Object(r.b)("p",null,"Here's a finished version:"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"![Template svg file](assets/en/custom-detailform/detailform-template-svg-file.png)")),Object(r.b)("p",null,"This template has dynamic field numbering, meaning that this template will allow you to add an ",Object(r.b)("strong",{parentName:"p"},"image")," and you can put ",Object(r.b)("strong",{parentName:"p"},"as many fields")," depending on your needs. So when you build your detail form in the Forms section and drag and drop a field, a new empty field appears below the previous one for you to add a new field:"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"![Template svg file](assets/en/custom-detailform/detailform-dynamic-field-number.png)")),Object(r.b)("p",null,"Open the template.svg file with your favorite code editor."),Object(r.b)("p",null,"Let\u2019s focus on the different parts of your SVG file and what you'll need to edit."),Object(r.b)("h2",{id:"title"},"Title"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-xml"},"<title>Custom Detail form</title>\n")),Object(r.b)("p",null,"Add the title for your template here."),Object(r.b)("h2",{id:"areas-position-height-and-width-and-type"},"Areas position, height and width and type"),Object(r.b)("p",null,"You can define position, height, and width for all of your fields like  we did for the ",Object(r.b)("inlineCode",{parentName:"p"},"[Custom list view tutorial](creating-listform.html)"),"."),Object(r.b)("h3",{id:"field-properties"},"Field properties"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},'//1\n<g id="f" visibility="hidden" ios:dy="35">\n\n//2\n<rect class="bg field" x="14" y="0" width="238" height="30"/>\n\n//3\n<textArea id="f.label" class="label" x="14" y="8" width="238">field[n]</textArea>\n\n//4\n<rect id="f" class="droppable field multivalued" x="14" y="0" width="238" height="30" stroke-dasharray="5,2" ios:type="0,1,2,4,8,9,11,25,35"/>\n\n//5\n<use id="f.cancel" x="224" y="1" xlink:href="#cancel" visibility="hidden"/>\n</g>\n')),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Entire area Y position"),Object(r.b)("li",{parentName:"ol"},"Area background position, height, and width"),Object(r.b)("li",{parentName:"ol"},"Define the text area position and width"),Object(r.b)("li",{parentName:"ol"},"Define the droppable field position, height, and width, as well as accepted fields types (all types are accepted in this example)"),Object(r.b)("li",{parentName:"ol"},"Define a cancel button that will be displayed to the delete current content")),Object(r.b)("h3",{id:"image-field-area"},"Image field area"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},'//1\n<g transform="translate(0,60)">\n\n//2\n<rect class="bg field" x="15" y="0" width="236" height="65"/>\n\n//3\n<path class="picture" transform="translate(10 0) scale(6)"/>\n\n//4\n<textArea id="f1.label" class="label" x="15" y="25" width="236">$4DEVAL(:C991("picture"))</textArea>\n\n//5\n<rect id="f1" class="droppable field" x="15" y="0" width="236" height="65" stroke-dasharray="5,2" ios:type="3" ios:bind="fields[0]"/>\n\n//6\n<use id="f1.cancel" x="222" y="20" xlink:href="#cancel" visibility="hidden"/>\n</g>\n')),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Entire area Y position"),Object(r.b)("li",{parentName:"ol"},"Area background position, height, and width"),Object(r.b)("li",{parentName:"ol"},"Icon to display an image in the imageField"),Object(r.b)("li",{parentName:"ol"},"Define the text area position and width"),Object(r.b)("li",{parentName:"ol"},"Define the droppable field position, height, and width, as well as accepted fields types"),Object(r.b)("li",{parentName:"ol"},"Define a cancel button that will be displayed to delete the current content")),Object(r.b)("p",null,"Now that you have an ",Object(r.b)("strong",{parentName:"p"},"icon"),", a ",Object(r.b)("strong",{parentName:"p"},"basic template description")," in the manifest.json file, and your ",Object(r.b)("strong",{parentName:"p"},"svg file"),", let's move on to the fun part with Xcode!"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"NOTE")),Object(r.b)("p",{parentName:"blockquote"},"All types are available ",Object(r.b)("inlineCode",{parentName:"p"},"[here](https://developer.4d.com/docs/en/Concepts/data-types.html)"),".")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"TIP")),Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"To make field type definition easier, 4D for iOS allows you to include field types with ",Object(r.b)("strong",{parentName:"p"},"positive values")," and also exclude field types with ",Object(r.b)("strong",{parentName:"p"},"negative values"),". For example, ",Object(r.b)("inlineCode",{parentName:"p"},'ios:type="-3,-4"')," will allow you to drag and drop every field exept images and dates.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"To include all types, just type ",Object(r.b)("inlineCode",{parentName:"p"},'ios:type="all"'),".")))))}s.isMDXComponent=!0},204:function(e,t,a){"use strict";a.d(t,"a",(function(){return c})),a.d(t,"b",(function(){return u}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=i.a.createContext({}),s=function(e){var t=i.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=s(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),c=s(a),m=n,u=c["".concat(l,".").concat(m)]||c[m]||b[m]||r;return a?i.a.createElement(u,o(o({ref:t},p),{},{components:a})):i.a.createElement(u,o({ref:t},p))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=m;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var p=2;p<r;p++)l[p]=a[p];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);