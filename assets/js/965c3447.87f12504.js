(self.webpackChunkgo_mobile=self.webpackChunkgo_mobile||[]).push([[5499],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return g}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),m=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=m(r),g=n,u=d["".concat(s,".").concat(g)]||d[g]||c[g]||o;return r?a.createElement(u,i(i({ref:t},p),{},{components:r})):a.createElement(u,i({ref:t},p))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var m=2;m<o;m++)i[m]=r[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},94452:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return s},default:function(){return p}});var a=r(22122),n=r(19756),o=(r(67294),r(3905)),i={id:"labels-and-icons-create-data-formatter",title:"Create data formatter"},l={unversionedId:"project-definition/labels-and-icons-create-data-formatter",id:"project-definition/labels-and-icons-create-data-formatter",isDocsHomePage:!1,title:"Create data formatter",description:"OBJECTIVES",source:"@site/docs/project-definition/labels-and-icons-create-data-formatter.md",sourceDirName:"project-definition",slug:"/project-definition/labels-and-icons-create-data-formatter",permalink:"/go-mobile/docs/project-definition/labels-and-icons-create-data-formatter",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/project-definition/labels-and-icons-create-data-formatter.md",version:"current",frontMatter:{id:"labels-and-icons-create-data-formatter",title:"Create data formatter"},sidebar:"docs",previous:{title:"Data formatter",permalink:"/go-mobile/docs/project-definition/labels-and-icons-data-formatter"},next:{title:"Build and Run your project",permalink:"/go-mobile/docs/project-definition/labels-and-icons-data-formatter-build-and-run-project"}},s=[{value:"Download the Starter Project",id:"download-the-starter-project",children:[]},{value:"Create the formatters folder",id:"create-the-formatters-folder",children:[]},{value:"Integer formatters",id:"integer-formatters",children:[{value:"Integer to string",id:"integer-to-string",children:[]},{value:"Integer to image",id:"integer-to-image",children:[]}]},{value:"Text formatters",id:"text-formatters",children:[{value:"Text to string",id:"text-to-string",children:[]},{value:"Text to image",id:"text-to-image",children:[]}]},{value:"Open mobile project",id:"open-mobile-project",children:[]},{value:"Build your 4D for iOS app",id:"build-your-4d-for-ios-app",children:[]}],m={toc:s};function p(e){var t=e.components,i=(0,n.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"OBJECTIVES")),(0,o.kt)("p",{parentName:"blockquote"},"Create your first data formatters.")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"PREREQUISITES")),(0,o.kt)("p",{parentName:"blockquote"},"Click ",(0,o.kt)("a",{parentName:"p",href:"../getting-started/requirements"},"here")," to see what you'll need to get started!")),(0,o.kt)("p",null,"In this tutorial, we'll guide you through the creation of various formatter examples."),(0,o.kt)("h2",{id:"download-the-starter-project"},"Download the Starter Project"),(0,o.kt)("p",null,"To begin, download the ",(0,o.kt)("strong",{parentName:"p"},"Starter Project"),", which includes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"integerToImage_Images")," and ",(0,o.kt)("strong",{parentName:"li"},"textToImage_Images")," folders that contain images (to use later for formatters that include images)"),(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("strong",{parentName:"li"},"Task Management.4dbase")," file (with a ready to use mobile app project)")),(0,o.kt)("div",{markdown:"1",style:{textAlign:"center",marginTop:"20px",marginBottom:"20px"}},(0,o.kt)("a",{class:"button",href:"https://github.com/4d-for-ios/tutorial-CustomDataFormatter/archive/66d7eea49bc3353f73dbf784ee06283b3a332d0b.zip"},"CUSTOM FORMATTER STARTER PROJECT")),(0,o.kt)("p",null,"You're now ready to create your first formatters!"),(0,o.kt)("h2",{id:"create-the-formatters-folder"},"Create the formatters folder"),(0,o.kt)("p",null,"First, create a ",(0,o.kt)("em",{parentName:"p"},"Task Management.4dbase/Resources/Mobile/formatters")," folder."),(0,o.kt)("h2",{id:"integer-formatters"},"Integer formatters"),(0,o.kt)("h3",{id:"integer-to-string"},"Integer to string"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create an ",(0,o.kt)("strong",{parentName:"li"},"integerToString")," folder in the formatters folder you've just created."),(0,o.kt)("li",{parentName:"ul"},"Then create a ",(0,o.kt)("strong",{parentName:"li"},"manifest.json")," file in the ",(0,o.kt)("strong",{parentName:"li"},"integerToString")," folder.")),(0,o.kt)("p",null,"Let's look at the contents of the ",(0,o.kt)("strong",{parentName:"p"},"manifest.json")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "name": "integerToString",\n\n   "type": ["integer"],\n\n   "binding": "localizedText",\n\n   "choiceList": {"0":"UX designer","1":"Developer","2":"QA","3":"Product Owner"}\n}\n')),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"name"),": the name of the formatter"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"type"),": the 4D format type you want to use"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"binding"),": can be ",(0,o.kt)("strong",{parentName:"li"},"localized text")," for strings or ",(0,o.kt)("strong",{parentName:"li"},"imageNamed")," for images"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"choiceList"),": mapped values")),(0,o.kt)("h3",{id:"integer-to-image"},"Integer to image"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Create an ",(0,o.kt)("strong",{parentName:"p"},"integerToImage")," folder in the ",(0,o.kt)("strong",{parentName:"p"},"formatters")," folder you've created.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Create a ",(0,o.kt)("strong",{parentName:"p"},"manifest.json")," file in the ",(0,o.kt)("strong",{parentName:"p"},"integerToImage")," folder."))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Then create an ",(0,o.kt)("strong",{parentName:"li"},"Images")," folder in the ",(0,o.kt)("strong",{parentName:"li"},"integerToImage")," folder. You can add the images from the ",(0,o.kt)("strong",{parentName:"li"},"integerToImage_Images")," in the StarterProject.zip to this new folder.")),(0,o.kt)("p",null,"Let's look at the contents of the ",(0,o.kt)("strong",{parentName:"p"},"manifest.json")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "integerToImage",\n\n   "type": ["integer"],\n\n   "binding": "imageNamed",\n\n   "choiceList": {"0":"todo.png","1":"inprogress.png","2":"pending.png","3":"done.png"},\n\n   "assets": {\n      "size": {\n         "width": 40, "height": 40\n      }\n    }\n}\n')),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"name"),": the name of the formatter"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"type")," : the 4D format type you want to use"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"binding"),": can be ",(0,o.kt)("strong",{parentName:"li"},"localized text")," for strings or ",(0,o.kt)("strong",{parentName:"li"},"imageNamed")," for images"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"choiceList"),": mapped values"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"assets"),": adjust the display size (width and height)")),(0,o.kt)("h2",{id:"text-formatters"},"Text formatters"),(0,o.kt)("h3",{id:"text-to-string"},"Text to string"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Create a ",(0,o.kt)("strong",{parentName:"p"},"textToString")," folder in the formatters folder you've just created.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Create a ",(0,o.kt)("strong",{parentName:"p"},"manifest.json")," file in the ",(0,o.kt)("strong",{parentName:"p"},"textToString")," folder."))),(0,o.kt)("p",null,"Let's look at the contents of the ",(0,o.kt)("strong",{parentName:"p"},"manifest.json")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "textToString",\n\n   "type": ["text"],\n\n   "binding": "localizedText",\n\n   "choiceList": {"FRA":"France","MAR":"Morocco","USA":"United States","AUS":"Australia"}\n}\n')),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"name"),": the name of the formatter"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"type"),": the 4D format type you want to use"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"binding"),": can be ",(0,o.kt)("strong",{parentName:"li"},"localized text")," for strings or ",(0,o.kt)("strong",{parentName:"li"},"imageNamed")," for images"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"choiceList"),": mapped values")),(0,o.kt)("h3",{id:"text-to-image"},"Text to image"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Create a ",(0,o.kt)("strong",{parentName:"p"},"textToImage")," folder in the formatters folder you've just created.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Create a ",(0,o.kt)("strong",{parentName:"p"},"manifest.json")," file in the ",(0,o.kt)("strong",{parentName:"p"},"textToImage")," folder."))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Then create an ",(0,o.kt)("strong",{parentName:"li"},"Images")," folder in the ",(0,o.kt)("strong",{parentName:"li"},"textToImage")," folder. You can add the images from the ",(0,o.kt)("strong",{parentName:"li"},"textToImage_Images")," in the StarterProject.zip to this new folder.")),(0,o.kt)("p",null,"Let's look at the contents of the ",(0,o.kt)("strong",{parentName:"p"},"manifest.json")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "textToImage",\n\n   "type": ["integer"],\n\n   "binding": "imageNamed",\n\n   "choiceList": ["image1.png","image2.png","image3.png"],\n\n   "assets": {\n  "size": {\n   "width": 40, "height": 40\n        }\n    }\n}\n\n')),(0,o.kt)("h2",{id:"open-mobile-project"},"Open mobile project"),(0,o.kt)("p",null,"Open the Task Management.4dbase with 4D and go to File > open > Mobile Project... to open the ",(0,o.kt)("strong",{parentName:"p"},"Tasks")),(0,o.kt)("p",null,"Next, go to the ",(0,o.kt)("strong",{parentName:"p"},"Labels & Icons section")," in the project editor. All of your formatters are available for the different field types you  previously defined in the different formatter manifest.json files:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Select the ",(0,o.kt)("strong",{parentName:"li"},"integerToString")," formatter for the ",(0,o.kt)("strong",{parentName:"li"},"Job field")),(0,o.kt)("li",{parentName:"ul"},"Select the ",(0,o.kt)("strong",{parentName:"li"},"textToString")," formatter for the ",(0,o.kt)("strong",{parentName:"li"},"Country field")),(0,o.kt)("li",{parentName:"ul"},"Select the ",(0,o.kt)("strong",{parentName:"li"},"integerToImage")," formatter for the ",(0,o.kt)("strong",{parentName:"li"},"Task Status")),(0,o.kt)("li",{parentName:"ul"},"Select the ",(0,o.kt)("strong",{parentName:"li"},"textToImage")," formatter for the ",(0,o.kt)("strong",{parentName:"li"},"Manager"))),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Text formatter",src:r(451).Z})),(0,o.kt)("h2",{id:"build-your-4d-for-ios-app"},"Build your 4D for iOS app"),(0,o.kt)("p",null,"Build your 4D of iOS app and you'll see that your data formatter is well applied depending on the credit limit."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Text formatter",src:r(6653).Z})),(0,o.kt)("p",null,"Click on ",(0,o.kt)("strong",{parentName:"p"},"FORMATTER FINAL")," below to download the completed formatter template folder."),(0,o.kt)("div",{markdown:"1",style:{textAlign:"center",marginTop:"20px"}},(0,o.kt)("a",{class:"button",href:"https://github.com/4d-for-ios/tutorial-CustomDataFormatter/releases/latest/download/tutorial-CustomDataFormatter.zip"},"FORMATTER FINAL")))}p.isMDXComponent=!0},6653:function(e,t,r){"use strict";t.Z=r.p+"assets/images/formatters-final-result-69d799b3a619fb518ea7ef3cbf96c8ee.png"},451:function(e,t,r){"use strict";t.Z=r.p+"assets/images/formatters-icons-&-labels-3967beccfbcde91e00b7e6ec1a69abfb.png"}}]);